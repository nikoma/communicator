/****************** GENERATORS ********************/CREATE GENERATOR MESSAGEIDGEN;
CREATE GENERATOR USERIDGEN;

/******************** DOMAINS *********************/
CREATE DOMAIN MESSAGEID
 AS Integer
 CHECK (VALUE > 0)
;
CREATE DOMAIN MSG_DIRECTION
 AS Varchar(8) CHARACTER SET UTF8
 DEFAULT 'NA'
 NOT NULL
 CHECK (VALUE IN ('IN', 'OUT', 'NA'))
 COLLATE UTF8;
CREATE DOMAIN USERID
 AS Integer
 CHECK (VALUE > 0)
;

/******************* PROCEDURES ******************/
SET TERM ^ ;
CREATE PROCEDURE MESSAGE_ADD (
    iUSER_ID Integer,
    iGUID Varchar(128) CHARACTER SET UTF8,
    iUSERNAME Varchar(32) CHARACTER SET UTF8,
    iCONTENT Varchar(4096) CHARACTER SET UTF8,
    iDIRECTION Varchar(8) )
AS
BEGIN EXIT; END^
SET TERM ; ^

SET TERM ^ ;
CREATE PROCEDURE MESSAGE_FIND (
    iUSER_ID Integer,
    iUSERNAME Varchar(32) CHARACTER SET UTF8,
    iSEARCH Varchar(32) CHARACTER SET UTF8,
    iLIMIT Integer)
RETURNS (
    oUSERNAME Varchar(32) CHARACTER SET UTF8,
    oCONTENT Varchar(4096) CHARACTER SET UTF8,
    oDIRECTION Varchar(8) CHARACTER SET UTF8,
    oCREATED Timestamp )
AS
BEGIN EXIT; END^
SET TERM ; ^

SET TERM ^ ;
CREATE PROCEDURE MESSAGE_ARCHIVE_USERS (
    iUSER_ID Integer
)
RETURNS (
    oUSERNAME Varchar(32) CHARACTER SET UTF8,
    oDIRECTION Varchar(8) CHARACTER SET UTF8,
    oCREATED Timestamp )
AS
BEGIN EXIT; END^
SET TERM ; ^


SET TERM ^ ;
CREATE PROCEDURE OPENDB (
    iUSERNAME Varchar(32) CHARACTER SET UTF8 )
RETURNS (
    oUSER_ID Integer,
    oVERSION Varchar(32) CHARACTER SET UTF8 )
AS
BEGIN EXIT; END^
SET TERM ; ^
/******************** TABLES **********************/
CREATE TABLE MESSAGES
(
  MESSAGE_ID MESSAGEID NOT NULL,
  USER_ID USERID NOT NULL,
  GUID Varchar(128) CHARACTER SET UTF8 NOT NULL,
  USERNAME Varchar(32) CHARACTER SET UTF8,
  CONTENT Varchar(4096) CHARACTER SET UTF8 NOT NULL,
  DIRECTION MSG_DIRECTION DEFAULT 'N/A',
  CREATED Timestamp DEFAULT 'NOW' NOT NULL
);
CREATE TABLE USERS
(
  USER_ID USERID NOT NULL,
  USERNAME Varchar(32) CHARACTER SET UTF8 NOT NULL,
  LAST_SYNC Timestamp
);
/********************* VIEWS **********************/
/******************* EXCEPTIONS *******************/
/******************** TRIGGERS ********************/
SET TERM ^ ;
CREATE TRIGGER MESSAGES_TRIG_BEF FOR MESSAGES ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
    if (new.MESSAGE_ID is null) then 
    new.MESSAGE_ID = gen_id(MESSAGEIDGEN, 1); 
END^
SET TERM ; ^

SET TERM ^ ;
CREATE TRIGGER USERS_TRIG_BEF FOR USERS ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
    if (new.USER_ID is null) then 
    new.USER_ID = gen_id(USERIDGEN, 1); 
END^
SET TERM ; ^
SET TERM ^ ;
ALTER PROCEDURE MESSAGE_ADD (
    iUSER_ID Integer,
    iGUID Varchar(128) CHARACTER SET UTF8,
    iUSERNAME Varchar(32) CHARACTER SET UTF8,
    iCONTENT Varchar(4096) CHARACTER SET UTF8,
    iDIRECTION Varchar(8) )
AS
BEGIN 
 BEGIN 
 INSERT INTO MESSAGES (USER_ID, GUID,USERNAME,CONTENT,DIRECTION) VALUES (:iUSER_ID, :iGUID,:iUSERNAME,:iCONTENT,:iDIRECTION); 
 END 
 SUSPEND; 
END^
SET TERM ; ^

GRANT EXECUTE
 ON PROCEDURE MESSAGE_ADD TO  SYSDBA;

SET TERM ^ ;
ALTER PROCEDURE MESSAGE_FIND (
    iUSER_ID Integer,
    iUSERNAME Varchar(32) CHARACTER SET UTF8,
    iSEARCH Varchar(32) CHARACTER SET UTF8,
    iLIMIT Integer )
RETURNS (
    oUSERNAME Varchar(32) CHARACTER SET UTF8,
    oCONTENT Varchar(4096) CHARACTER SET UTF8,
    oDIRECTION Varchar(8) CHARACTER SET UTF8,
    oCREATED Timestamp )
AS
BEGIN 

FOR SELECT FIRST (:iLIMIT) USERNAME, CONTENT, DIRECTION, CREATED 
FROM MESSAGES 
WHERE CONTENT like :iSEARCH 
AND USERNAME  = :iUSERNAME 
AND USER_ID =  :iUSER_ID 
ORDER BY CREATED DESC 
INTO :oUSERNAME, :oCONTENT, :oDIRECTION , :oCREATED DO
  BEGIN
   SUSPEND;
  END

END^
SET TERM ; ^

GRANT EXECUTE
 ON PROCEDURE MESSAGE_FIND TO  SYSDBA;

SET TERM ^ ;
ALTER PROCEDURE MESSAGE_ARCHIVE_USERS (
    iUSER_ID Integer
)
RETURNS (
    oUSERNAME Varchar(32) CHARACTER SET UTF8,
    oDIRECTION Varchar(8) CHARACTER SET UTF8,
    oCREATED Timestamp )
AS
BEGIN 
FOR SELECT DISTINCT USERNAME, DIRECTION,  CREATED
FROM MESSAGES M1
WHERE USER_ID =  :iUSER_ID AND CREATED = 
( SELECT MAX (CREATED) FROM MESSAGES M2
WHERE M1.USERNAME = M2.USERNAME
)
ORDER BY USERNAME DESC 
INTO :oUSERNAME, :oDIRECTION , :oCREATED DO
  BEGIN
   SUSPEND;
  END
END^
SET TERM ; ^


SET TERM ^ ;
ALTER PROCEDURE OPENDB (
    iUSERNAME Varchar(32) CHARACTER SET UTF8 )
RETURNS (
    oUSER_ID Integer,
    oVERSION Varchar(32) CHARACTER SET UTF8 )
AS
DECLARE VARIABLE cnt INTEGER; 
BEGIN 
 SELECT count(USER_ID) FROM USERS WHERE USERNAME = :iUSERNAME INTO :cnt; 
 IF (cnt = 0) THEN 
  INSERT INTO USERS (USERNAME) VALUES (:iUSERNAME); 
 FOR SELECT USER_ID 
  FROM USERS 
  WHERE USERNAME = :iUSERNAME 
  INTO :oUSER_ID 
  DO SUSPEND; 
END^
SET TERM ; ^
GRANT EXECUTE
 ON PROCEDURE OPENDB TO  SYSDBA;
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON MESSAGES TO  SYSDBA WITH GRANT OPTION;
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON USERS TO  SYSDBA WITH GRANT OPTION;