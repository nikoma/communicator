//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace Remwave.Client.RemwaveLiteWS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://lite.remwave.com/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback VersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SoftwareOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceProvidersOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = "http://api.remwave.com/RemwaveLiteWS/Service.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event VersionCompletedEventHandler VersionCompleted;
        
        /// <remarks/>
        public event SoftwareCompletedEventHandler SoftwareCompleted;
        
        /// <remarks/>
        public event NewsCompletedEventHandler NewsCompleted;
        
        /// <remarks/>
        public event ServiceProvidersCompletedEventHandler ServiceProvidersCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lite.remwave.com/Version", RequestNamespace="http://lite.remwave.com/", ResponseNamespace="http://lite.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Version() {
            object[] results = this.Invoke("Version", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void VersionAsync() {
            this.VersionAsync(null);
        }
        
        /// <remarks/>
        public void VersionAsync(object userState) {
            if ((this.VersionOperationCompleted == null)) {
                this.VersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVersionOperationCompleted);
            }
            this.InvokeAsync("Version", new object[0], this.VersionOperationCompleted, userState);
        }
        
        private void OnVersionOperationCompleted(object arg) {
            if ((this.VersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VersionCompleted(this, new VersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lite.remwave.com/Software", RequestNamespace="http://lite.remwave.com/", ResponseNamespace="http://lite.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Software() {
            object[] results = this.Invoke("Software", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SoftwareAsync() {
            this.SoftwareAsync(null);
        }
        
        /// <remarks/>
        public void SoftwareAsync(object userState) {
            if ((this.SoftwareOperationCompleted == null)) {
                this.SoftwareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSoftwareOperationCompleted);
            }
            this.InvokeAsync("Software", new object[0], this.SoftwareOperationCompleted, userState);
        }
        
        private void OnSoftwareOperationCompleted(object arg) {
            if ((this.SoftwareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SoftwareCompleted(this, new SoftwareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lite.remwave.com/News", RequestNamespace="http://lite.remwave.com/", ResponseNamespace="http://lite.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string News() {
            object[] results = this.Invoke("News", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewsAsync() {
            this.NewsAsync(null);
        }
        
        /// <remarks/>
        public void NewsAsync(object userState) {
            if ((this.NewsOperationCompleted == null)) {
                this.NewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsOperationCompleted);
            }
            this.InvokeAsync("News", new object[0], this.NewsOperationCompleted, userState);
        }
        
        private void OnNewsOperationCompleted(object arg) {
            if ((this.NewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsCompleted(this, new NewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lite.remwave.com/ServiceProviders", RequestNamespace="http://lite.remwave.com/", ResponseNamespace="http://lite.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceProvider[] ServiceProviders(string version) {
            object[] results = this.Invoke("ServiceProviders", new object[] {
                        version});
            return ((ServiceProvider[])(results[0]));
        }
        
        /// <remarks/>
        public void ServiceProvidersAsync(string version) {
            this.ServiceProvidersAsync(version, null);
        }
        
        /// <remarks/>
        public void ServiceProvidersAsync(string version, object userState) {
            if ((this.ServiceProvidersOperationCompleted == null)) {
                this.ServiceProvidersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceProvidersOperationCompleted);
            }
            this.InvokeAsync("ServiceProviders", new object[] {
                        version}, this.ServiceProvidersOperationCompleted, userState);
        }
        
        private void OnServiceProvidersOperationCompleted(object arg) {
            if ((this.ServiceProvidersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceProvidersCompleted(this, new ServiceProvidersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://lite.remwave.com/")]
    public partial class ServiceProvider {
        
        private string nameField;
        
        private string descriptionField;
        
        private string iMServerAddressField;
        
        private int iMServerPortField;
        
        private string sIPProxyRealmField;
        
        private string sIPProxyAddressField;
        
        private int sIPProxyPortField;
        
        private string videoProxyAddressField;
        
        private int videoProxyPortField;
        
        private string signupLinkField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string IMServerAddress {
            get {
                return this.iMServerAddressField;
            }
            set {
                this.iMServerAddressField = value;
            }
        }
        
        /// <remarks/>
        public int IMServerPort {
            get {
                return this.iMServerPortField;
            }
            set {
                this.iMServerPortField = value;
            }
        }
        
        /// <remarks/>
        public string SIPProxyRealm {
            get {
                return this.sIPProxyRealmField;
            }
            set {
                this.sIPProxyRealmField = value;
            }
        }
        
        /// <remarks/>
        public string SIPProxyAddress {
            get {
                return this.sIPProxyAddressField;
            }
            set {
                this.sIPProxyAddressField = value;
            }
        }
        
        /// <remarks/>
        public int SIPProxyPort {
            get {
                return this.sIPProxyPortField;
            }
            set {
                this.sIPProxyPortField = value;
            }
        }
        
        /// <remarks/>
        public string VideoProxyAddress {
            get {
                return this.videoProxyAddressField;
            }
            set {
                this.videoProxyAddressField = value;
            }
        }
        
        /// <remarks/>
        public int VideoProxyPort {
            get {
                return this.videoProxyPortField;
            }
            set {
                this.videoProxyPortField = value;
            }
        }
        
        /// <remarks/>
        public string SignupLink {
            get {
                return this.signupLinkField;
            }
            set {
                this.signupLinkField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void VersionCompletedEventHandler(object sender, VersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void SoftwareCompletedEventHandler(object sender, SoftwareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SoftwareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SoftwareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void NewsCompletedEventHandler(object sender, NewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void ServiceProvidersCompletedEventHandler(object sender, ServiceProvidersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceProvidersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceProvidersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceProvider[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceProvider[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591