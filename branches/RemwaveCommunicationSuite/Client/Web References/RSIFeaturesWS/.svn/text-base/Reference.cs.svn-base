//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace Remwave.Client.RSIFeaturesWS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://rsi.remwave.com/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback clientPrepaidAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback clientCallNowOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountRemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountPreferedLanguageUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountTimeZoneUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountUserAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountUserUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountUserRemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountUserOnlineStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountPrepaidOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountPrepaidAlertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountPrepaidMasterAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountMinutesOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceDialPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceDialPlanUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceLocalNumbersAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceLocalNumbersOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceLocalNumberPhoneAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceLocalNumberFaxAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceLocalNumberPhoneUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceLocalNumberFaxUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceLocalNumberRemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceMailboxesOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceMailboxesUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback service99NumbersOperationCompleted;
        
        private System.Threading.SendOrPostCallback service99NumberAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback service99NumberRemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceSpeedDialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceSpeedDialsAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceSpeedDialRemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceCallNowOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceCallBacksOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceCallBackAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback serviceCallBackRemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback billingCDROperationCompleted;
        
        private System.Threading.SendOrPostCallback billingOverviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback utilsRatesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service(string url) {
            this.Url = url;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event clientPrepaidAmountCompletedEventHandler clientPrepaidAmountCompleted;
        
        /// <remarks/>
        public event clientCallNowCompletedEventHandler clientCallNowCompleted;
        
        /// <remarks/>
        public event accountCreateCompletedEventHandler accountCreateCompleted;
        
        /// <remarks/>
        public event accountUpdateCompletedEventHandler accountUpdateCompleted;
        
        /// <remarks/>
        public event accountCustomerCompletedEventHandler accountCustomerCompleted;
        
        /// <remarks/>
        public event accountRemoveCompletedEventHandler accountRemoveCompleted;
        
        /// <remarks/>
        public event accountPreferedLanguageUpdateCompletedEventHandler accountPreferedLanguageUpdateCompleted;
        
        /// <remarks/>
        public event accountTimeZoneUpdateCompletedEventHandler accountTimeZoneUpdateCompleted;
        
        /// <remarks/>
        public event accountAuthenticationCompletedEventHandler accountAuthenticationCompleted;
        
        /// <remarks/>
        public event accountUsersCompletedEventHandler accountUsersCompleted;
        
        /// <remarks/>
        public event accountUserAddCompletedEventHandler accountUserAddCompleted;
        
        /// <remarks/>
        public event accountUserUpdateCompletedEventHandler accountUserUpdateCompleted;
        
        /// <remarks/>
        public event accountUserRemoveCompletedEventHandler accountUserRemoveCompleted;
        
        /// <remarks/>
        public event accountUserOnlineStatusCompletedEventHandler accountUserOnlineStatusCompleted;
        
        /// <remarks/>
        public event accountPrepaidCompletedEventHandler accountPrepaidCompleted;
        
        /// <remarks/>
        public event accountPrepaidAlertUpdateCompletedEventHandler accountPrepaidAlertUpdateCompleted;
        
        /// <remarks/>
        public event accountPrepaidMasterAddCompletedEventHandler accountPrepaidMasterAddCompleted;
        
        /// <remarks/>
        public event accountMinutesCompletedEventHandler accountMinutesCompleted;
        
        /// <remarks/>
        public event serviceDialPlanCompletedEventHandler serviceDialPlanCompleted;
        
        /// <remarks/>
        public event serviceDialPlanUpdateCompletedEventHandler serviceDialPlanUpdateCompleted;
        
        /// <remarks/>
        public event serviceLocalNumbersAreasCompletedEventHandler serviceLocalNumbersAreasCompleted;
        
        /// <remarks/>
        public event serviceLocalNumbersCompletedEventHandler serviceLocalNumbersCompleted;
        
        /// <remarks/>
        public event serviceLocalNumberPhoneAddCompletedEventHandler serviceLocalNumberPhoneAddCompleted;
        
        /// <remarks/>
        public event serviceLocalNumberFaxAddCompletedEventHandler serviceLocalNumberFaxAddCompleted;
        
        /// <remarks/>
        public event serviceLocalNumberPhoneUpdateCompletedEventHandler serviceLocalNumberPhoneUpdateCompleted;
        
        /// <remarks/>
        public event serviceLocalNumberFaxUpdateCompletedEventHandler serviceLocalNumberFaxUpdateCompleted;
        
        /// <remarks/>
        public event serviceLocalNumberRemoveCompletedEventHandler serviceLocalNumberRemoveCompleted;
        
        /// <remarks/>
        public event serviceMailboxesCompletedEventHandler serviceMailboxesCompleted;
        
        /// <remarks/>
        public event serviceMailboxesUpdateCompletedEventHandler serviceMailboxesUpdateCompleted;
        
        /// <remarks/>
        public event service99NumbersCompletedEventHandler service99NumbersCompleted;
        
        /// <remarks/>
        public event service99NumberAddCompletedEventHandler service99NumberAddCompleted;
        
        /// <remarks/>
        public event service99NumberRemoveCompletedEventHandler service99NumberRemoveCompleted;
        
        /// <remarks/>
        public event serviceSpeedDialsCompletedEventHandler serviceSpeedDialsCompleted;
        
        /// <remarks/>
        public event serviceSpeedDialsAddCompletedEventHandler serviceSpeedDialsAddCompleted;
        
        /// <remarks/>
        public event serviceSpeedDialRemoveCompletedEventHandler serviceSpeedDialRemoveCompleted;
        
        /// <remarks/>
        public event serviceCallNowCompletedEventHandler serviceCallNowCompleted;
        
        /// <remarks/>
        public event serviceCallBacksCompletedEventHandler serviceCallBacksCompleted;
        
        /// <remarks/>
        public event serviceCallBackAddCompletedEventHandler serviceCallBackAddCompleted;
        
        /// <remarks/>
        public event serviceCallBackRemoveCompletedEventHandler serviceCallBackRemoveCompleted;
        
        /// <remarks/>
        public event billingCDRCompletedEventHandler billingCDRCompleted;
        
        /// <remarks/>
        public event billingOverviewCompletedEventHandler billingOverviewCompleted;
        
        /// <remarks/>
        public event utilsRatesCompletedEventHandler utilsRatesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/clientPrepaidAmount", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string clientPrepaidAmount(string IN_USERNAME, string IN_PASSWORD) {
            object[] results = this.Invoke("clientPrepaidAmount", new object[] {
                        IN_USERNAME,
                        IN_PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void clientPrepaidAmountAsync(string IN_USERNAME, string IN_PASSWORD) {
            this.clientPrepaidAmountAsync(IN_USERNAME, IN_PASSWORD, null);
        }
        
        /// <remarks/>
        public void clientPrepaidAmountAsync(string IN_USERNAME, string IN_PASSWORD, object userState) {
            if ((this.clientPrepaidAmountOperationCompleted == null)) {
                this.clientPrepaidAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclientPrepaidAmountOperationCompleted);
            }
            this.InvokeAsync("clientPrepaidAmount", new object[] {
                        IN_USERNAME,
                        IN_PASSWORD}, this.clientPrepaidAmountOperationCompleted, userState);
        }
        
        private void OnclientPrepaidAmountOperationCompleted(object arg) {
            if ((this.clientPrepaidAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clientPrepaidAmountCompleted(this, new clientPrepaidAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/clientCallNow", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string clientCallNow(string IN_USERNAME, string IN_PASSWORD, string IN_CALL_FROM, string IN_CALL_TO) {
            object[] results = this.Invoke("clientCallNow", new object[] {
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_CALL_FROM,
                        IN_CALL_TO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void clientCallNowAsync(string IN_USERNAME, string IN_PASSWORD, string IN_CALL_FROM, string IN_CALL_TO) {
            this.clientCallNowAsync(IN_USERNAME, IN_PASSWORD, IN_CALL_FROM, IN_CALL_TO, null);
        }
        
        /// <remarks/>
        public void clientCallNowAsync(string IN_USERNAME, string IN_PASSWORD, string IN_CALL_FROM, string IN_CALL_TO, object userState) {
            if ((this.clientCallNowOperationCompleted == null)) {
                this.clientCallNowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclientCallNowOperationCompleted);
            }
            this.InvokeAsync("clientCallNow", new object[] {
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_CALL_FROM,
                        IN_CALL_TO}, this.clientCallNowOperationCompleted, userState);
        }
        
        private void OnclientCallNowOperationCompleted(object arg) {
            if ((this.clientCallNowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clientCallNowCompleted(this, new clientCallNowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/accountCreate", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet accountCreate(string IN_SECRET, string IN_CPID, string IN_USERNAME_NEW, string IN_PASSWORD_NEW) {
            object[] results = this.Invoke("accountCreate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_USERNAME_NEW,
                        IN_PASSWORD_NEW});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void accountCreateAsync(string IN_SECRET, string IN_CPID, string IN_USERNAME_NEW, string IN_PASSWORD_NEW) {
            this.accountCreateAsync(IN_SECRET, IN_CPID, IN_USERNAME_NEW, IN_PASSWORD_NEW, null);
        }
        
        /// <remarks/>
        public void accountCreateAsync(string IN_SECRET, string IN_CPID, string IN_USERNAME_NEW, string IN_PASSWORD_NEW, object userState) {
            if ((this.accountCreateOperationCompleted == null)) {
                this.accountCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountCreateOperationCompleted);
            }
            this.InvokeAsync("accountCreate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_USERNAME_NEW,
                        IN_PASSWORD_NEW}, this.accountCreateOperationCompleted, userState);
        }
        
        private void OnaccountCreateOperationCompleted(object arg) {
            if ((this.accountCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountCreateCompleted(this, new accountCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/accountUpdate", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet accountUpdate(
                    string IN_SECRET, 
                    string IN_CPID, 
                    string IN_CUSTOMERID, 
                    string IN_USERNAME, 
                    string IN_PASSWORD, 
                    string IN_COMPANY, 
                    string IN_FIRST_NAME, 
                    string IN_LAST_NAME, 
                    string IN_STREET, 
                    string IN_HOUSENR, 
                    string IN_ZIP_CODE, 
                    string IN_CITY, 
                    string IN_STATE, 
                    string IN_COUNTRY_ID, 
                    string IN_PHONE, 
                    string IN_PHONE_WORK, 
                    string IN_FAX, 
                    string IN_EMAIL, 
                    string IN_GENDER, 
                    string IN_USTIDNR) {
            object[] results = this.Invoke("accountUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_COMPANY,
                        IN_FIRST_NAME,
                        IN_LAST_NAME,
                        IN_STREET,
                        IN_HOUSENR,
                        IN_ZIP_CODE,
                        IN_CITY,
                        IN_STATE,
                        IN_COUNTRY_ID,
                        IN_PHONE,
                        IN_PHONE_WORK,
                        IN_FAX,
                        IN_EMAIL,
                        IN_GENDER,
                        IN_USTIDNR});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void accountUpdateAsync(
                    string IN_SECRET, 
                    string IN_CPID, 
                    string IN_CUSTOMERID, 
                    string IN_USERNAME, 
                    string IN_PASSWORD, 
                    string IN_COMPANY, 
                    string IN_FIRST_NAME, 
                    string IN_LAST_NAME, 
                    string IN_STREET, 
                    string IN_HOUSENR, 
                    string IN_ZIP_CODE, 
                    string IN_CITY, 
                    string IN_STATE, 
                    string IN_COUNTRY_ID, 
                    string IN_PHONE, 
                    string IN_PHONE_WORK, 
                    string IN_FAX, 
                    string IN_EMAIL, 
                    string IN_GENDER, 
                    string IN_USTIDNR) {
            this.accountUpdateAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_COMPANY, IN_FIRST_NAME, IN_LAST_NAME, IN_STREET, IN_HOUSENR, IN_ZIP_CODE, IN_CITY, IN_STATE, IN_COUNTRY_ID, IN_PHONE, IN_PHONE_WORK, IN_FAX, IN_EMAIL, IN_GENDER, IN_USTIDNR, null);
        }
        
        /// <remarks/>
        public void accountUpdateAsync(
                    string IN_SECRET, 
                    string IN_CPID, 
                    string IN_CUSTOMERID, 
                    string IN_USERNAME, 
                    string IN_PASSWORD, 
                    string IN_COMPANY, 
                    string IN_FIRST_NAME, 
                    string IN_LAST_NAME, 
                    string IN_STREET, 
                    string IN_HOUSENR, 
                    string IN_ZIP_CODE, 
                    string IN_CITY, 
                    string IN_STATE, 
                    string IN_COUNTRY_ID, 
                    string IN_PHONE, 
                    string IN_PHONE_WORK, 
                    string IN_FAX, 
                    string IN_EMAIL, 
                    string IN_GENDER, 
                    string IN_USTIDNR, 
                    object userState) {
            if ((this.accountUpdateOperationCompleted == null)) {
                this.accountUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountUpdateOperationCompleted);
            }
            this.InvokeAsync("accountUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_COMPANY,
                        IN_FIRST_NAME,
                        IN_LAST_NAME,
                        IN_STREET,
                        IN_HOUSENR,
                        IN_ZIP_CODE,
                        IN_CITY,
                        IN_STATE,
                        IN_COUNTRY_ID,
                        IN_PHONE,
                        IN_PHONE_WORK,
                        IN_FAX,
                        IN_EMAIL,
                        IN_GENDER,
                        IN_USTIDNR}, this.accountUpdateOperationCompleted, userState);
        }
        
        private void OnaccountUpdateOperationCompleted(object arg) {
            if ((this.accountUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountUpdateCompleted(this, new accountUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/accountCustomer", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet accountCustomer(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            object[] results = this.Invoke("accountCustomer", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void accountCustomerAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            this.accountCustomerAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, null);
        }
        
        /// <remarks/>
        public void accountCustomerAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, object userState) {
            if ((this.accountCustomerOperationCompleted == null)) {
                this.accountCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountCustomerOperationCompleted);
            }
            this.InvokeAsync("accountCustomer", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD}, this.accountCustomerOperationCompleted, userState);
        }
        
        private void OnaccountCustomerOperationCompleted(object arg) {
            if ((this.accountCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountCustomerCompleted(this, new accountCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/accountRemove", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet accountRemove(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            object[] results = this.Invoke("accountRemove", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void accountRemoveAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            this.accountRemoveAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, null);
        }
        
        /// <remarks/>
        public void accountRemoveAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, object userState) {
            if ((this.accountRemoveOperationCompleted == null)) {
                this.accountRemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountRemoveOperationCompleted);
            }
            this.InvokeAsync("accountRemove", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD}, this.accountRemoveOperationCompleted, userState);
        }
        
        private void OnaccountRemoveOperationCompleted(object arg) {
            if ((this.accountRemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountRemoveCompleted(this, new accountRemoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/accountPreferedLanguageUpdate", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet accountPreferedLanguageUpdate(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_PREFERED_LANGUAGE) {
            object[] results = this.Invoke("accountPreferedLanguageUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_PREFERED_LANGUAGE});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void accountPreferedLanguageUpdateAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_PREFERED_LANGUAGE) {
            this.accountPreferedLanguageUpdateAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_PREFERED_LANGUAGE, null);
        }
        
        /// <remarks/>
        public void accountPreferedLanguageUpdateAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_PREFERED_LANGUAGE, object userState) {
            if ((this.accountPreferedLanguageUpdateOperationCompleted == null)) {
                this.accountPreferedLanguageUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountPreferedLanguageUpdateOperationCompleted);
            }
            this.InvokeAsync("accountPreferedLanguageUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_PREFERED_LANGUAGE}, this.accountPreferedLanguageUpdateOperationCompleted, userState);
        }
        
        private void OnaccountPreferedLanguageUpdateOperationCompleted(object arg) {
            if ((this.accountPreferedLanguageUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountPreferedLanguageUpdateCompleted(this, new accountPreferedLanguageUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/accountTimeZoneUpdate", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet accountTimeZoneUpdate(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_TZ_GMT_DIFF, string IN_USERNAME_ACT) {
            object[] results = this.Invoke("accountTimeZoneUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_TZ_GMT_DIFF,
                        IN_USERNAME_ACT});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void accountTimeZoneUpdateAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_TZ_GMT_DIFF, string IN_USERNAME_ACT) {
            this.accountTimeZoneUpdateAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_TZ_GMT_DIFF, IN_USERNAME_ACT, null);
        }
        
        /// <remarks/>
        public void accountTimeZoneUpdateAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_TZ_GMT_DIFF, string IN_USERNAME_ACT, object userState) {
            if ((this.accountTimeZoneUpdateOperationCompleted == null)) {
                this.accountTimeZoneUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountTimeZoneUpdateOperationCompleted);
            }
            this.InvokeAsync("accountTimeZoneUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_TZ_GMT_DIFF,
                        IN_USERNAME_ACT}, this.accountTimeZoneUpdateOperationCompleted, userState);
        }
        
        private void OnaccountTimeZoneUpdateOperationCompleted(object arg) {
            if ((this.accountTimeZoneUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountTimeZoneUpdateCompleted(this, new accountTimeZoneUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/accountAuthentication", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet accountAuthentication(string IN_SECRET, string IN_CPID, string IN_USERNAME, string IN_PASSWORD) {
            object[] results = this.Invoke("accountAuthentication", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_USERNAME,
                        IN_PASSWORD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void accountAuthenticationAsync(string IN_SECRET, string IN_CPID, string IN_USERNAME, string IN_PASSWORD) {
            this.accountAuthenticationAsync(IN_SECRET, IN_CPID, IN_USERNAME, IN_PASSWORD, null);
        }
        
        /// <remarks/>
        public void accountAuthenticationAsync(string IN_SECRET, string IN_CPID, string IN_USERNAME, string IN_PASSWORD, object userState) {
            if ((this.accountAuthenticationOperationCompleted == null)) {
                this.accountAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountAuthenticationOperationCompleted);
            }
            this.InvokeAsync("accountAuthentication", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_USERNAME,
                        IN_PASSWORD}, this.accountAuthenticationOperationCompleted, userState);
        }
        
        private void OnaccountAuthenticationOperationCompleted(object arg) {
            if ((this.accountAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountAuthenticationCompleted(this, new accountAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/accountUsers", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet accountUsers(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            object[] results = this.Invoke("accountUsers", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void accountUsersAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            this.accountUsersAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, null);
        }
        
        /// <remarks/>
        public void accountUsersAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, object userState) {
            if ((this.accountUsersOperationCompleted == null)) {
                this.accountUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountUsersOperationCompleted);
            }
            this.InvokeAsync("accountUsers", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD}, this.accountUsersOperationCompleted, userState);
        }
        
        private void OnaccountUsersOperationCompleted(object arg) {
            if ((this.accountUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountUsersCompleted(this, new accountUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/accountUserAdd", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet accountUserAdd(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_NEW, string IN_PASSWORD_NEW) {
            object[] results = this.Invoke("accountUserAdd", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_USERNAME_NEW,
                        IN_PASSWORD_NEW});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void accountUserAddAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_NEW, string IN_PASSWORD_NEW) {
            this.accountUserAddAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_USERNAME_NEW, IN_PASSWORD_NEW, null);
        }
        
        /// <remarks/>
        public void accountUserAddAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_NEW, string IN_PASSWORD_NEW, object userState) {
            if ((this.accountUserAddOperationCompleted == null)) {
                this.accountUserAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountUserAddOperationCompleted);
            }
            this.InvokeAsync("accountUserAdd", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_USERNAME_NEW,
                        IN_PASSWORD_NEW}, this.accountUserAddOperationCompleted, userState);
        }
        
        private void OnaccountUserAddOperationCompleted(object arg) {
            if ((this.accountUserAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountUserAddCompleted(this, new accountUserAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/accountUserUpdate", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet accountUserUpdate(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_PASSWORD_NEW) {
            object[] results = this.Invoke("accountUserUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_PASSWORD_NEW});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void accountUserUpdateAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_PASSWORD_NEW) {
            this.accountUserUpdateAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_PASSWORD_NEW, null);
        }
        
        /// <remarks/>
        public void accountUserUpdateAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_PASSWORD_NEW, object userState) {
            if ((this.accountUserUpdateOperationCompleted == null)) {
                this.accountUserUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountUserUpdateOperationCompleted);
            }
            this.InvokeAsync("accountUserUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_PASSWORD_NEW}, this.accountUserUpdateOperationCompleted, userState);
        }
        
        private void OnaccountUserUpdateOperationCompleted(object arg) {
            if ((this.accountUserUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountUserUpdateCompleted(this, new accountUserUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/accountUserRemove", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet accountUserRemove(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT) {
            object[] results = this.Invoke("accountUserRemove", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_USERNAME_ACT});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void accountUserRemoveAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT) {
            this.accountUserRemoveAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_USERNAME_ACT, null);
        }
        
        /// <remarks/>
        public void accountUserRemoveAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT, object userState) {
            if ((this.accountUserRemoveOperationCompleted == null)) {
                this.accountUserRemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountUserRemoveOperationCompleted);
            }
            this.InvokeAsync("accountUserRemove", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_USERNAME_ACT}, this.accountUserRemoveOperationCompleted, userState);
        }
        
        private void OnaccountUserRemoveOperationCompleted(object arg) {
            if ((this.accountUserRemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountUserRemoveCompleted(this, new accountUserRemoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/accountUserOnlineStatus", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet accountUserOnlineStatus(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_SEARCH) {
            object[] results = this.Invoke("accountUserOnlineStatus", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_SEARCH});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void accountUserOnlineStatusAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_SEARCH) {
            this.accountUserOnlineStatusAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_SEARCH, null);
        }
        
        /// <remarks/>
        public void accountUserOnlineStatusAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_SEARCH, object userState) {
            if ((this.accountUserOnlineStatusOperationCompleted == null)) {
                this.accountUserOnlineStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountUserOnlineStatusOperationCompleted);
            }
            this.InvokeAsync("accountUserOnlineStatus", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_SEARCH}, this.accountUserOnlineStatusOperationCompleted, userState);
        }
        
        private void OnaccountUserOnlineStatusOperationCompleted(object arg) {
            if ((this.accountUserOnlineStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountUserOnlineStatusCompleted(this, new accountUserOnlineStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/accountPrepaid", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet accountPrepaid(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            object[] results = this.Invoke("accountPrepaid", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void accountPrepaidAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            this.accountPrepaidAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, null);
        }
        
        /// <remarks/>
        public void accountPrepaidAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, object userState) {
            if ((this.accountPrepaidOperationCompleted == null)) {
                this.accountPrepaidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountPrepaidOperationCompleted);
            }
            this.InvokeAsync("accountPrepaid", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD}, this.accountPrepaidOperationCompleted, userState);
        }
        
        private void OnaccountPrepaidOperationCompleted(object arg) {
            if ((this.accountPrepaidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountPrepaidCompleted(this, new accountPrepaidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/accountPrepaidAlertUpdate", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet accountPrepaidAlertUpdate(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_AMOUNT) {
            object[] results = this.Invoke("accountPrepaidAlertUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_AMOUNT});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void accountPrepaidAlertUpdateAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_AMOUNT) {
            this.accountPrepaidAlertUpdateAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_AMOUNT, null);
        }
        
        /// <remarks/>
        public void accountPrepaidAlertUpdateAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_AMOUNT, object userState) {
            if ((this.accountPrepaidAlertUpdateOperationCompleted == null)) {
                this.accountPrepaidAlertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountPrepaidAlertUpdateOperationCompleted);
            }
            this.InvokeAsync("accountPrepaidAlertUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_AMOUNT}, this.accountPrepaidAlertUpdateOperationCompleted, userState);
        }
        
        private void OnaccountPrepaidAlertUpdateOperationCompleted(object arg) {
            if ((this.accountPrepaidAlertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountPrepaidAlertUpdateCompleted(this, new accountPrepaidAlertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/accountPrepaidMasterAdd", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet accountPrepaidMasterAdd(string IN_SECRET, string IN_SECRET2, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_CUSTOMERID_RECIPIENT, string IN_AMOUNT) {
            object[] results = this.Invoke("accountPrepaidMasterAdd", new object[] {
                        IN_SECRET,
                        IN_SECRET2,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_CUSTOMERID_RECIPIENT,
                        IN_AMOUNT});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void accountPrepaidMasterAddAsync(string IN_SECRET, string IN_SECRET2, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_CUSTOMERID_RECIPIENT, string IN_AMOUNT) {
            this.accountPrepaidMasterAddAsync(IN_SECRET, IN_SECRET2, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_CUSTOMERID_RECIPIENT, IN_AMOUNT, null);
        }
        
        /// <remarks/>
        public void accountPrepaidMasterAddAsync(string IN_SECRET, string IN_SECRET2, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_CUSTOMERID_RECIPIENT, string IN_AMOUNT, object userState) {
            if ((this.accountPrepaidMasterAddOperationCompleted == null)) {
                this.accountPrepaidMasterAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountPrepaidMasterAddOperationCompleted);
            }
            this.InvokeAsync("accountPrepaidMasterAdd", new object[] {
                        IN_SECRET,
                        IN_SECRET2,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_CUSTOMERID_RECIPIENT,
                        IN_AMOUNT}, this.accountPrepaidMasterAddOperationCompleted, userState);
        }
        
        private void OnaccountPrepaidMasterAddOperationCompleted(object arg) {
            if ((this.accountPrepaidMasterAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountPrepaidMasterAddCompleted(this, new accountPrepaidMasterAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/accountMinutes", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet accountMinutes(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            object[] results = this.Invoke("accountMinutes", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void accountMinutesAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            this.accountMinutesAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, null);
        }
        
        /// <remarks/>
        public void accountMinutesAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, object userState) {
            if ((this.accountMinutesOperationCompleted == null)) {
                this.accountMinutesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountMinutesOperationCompleted);
            }
            this.InvokeAsync("accountMinutes", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD}, this.accountMinutesOperationCompleted, userState);
        }
        
        private void OnaccountMinutesOperationCompleted(object arg) {
            if ((this.accountMinutesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountMinutesCompleted(this, new accountMinutesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceDialPlan", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceDialPlan(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT) {
            object[] results = this.Invoke("serviceDialPlan", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_USERNAME_ACT});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceDialPlanAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT) {
            this.serviceDialPlanAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_USERNAME_ACT, null);
        }
        
        /// <remarks/>
        public void serviceDialPlanAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT, object userState) {
            if ((this.serviceDialPlanOperationCompleted == null)) {
                this.serviceDialPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceDialPlanOperationCompleted);
            }
            this.InvokeAsync("serviceDialPlan", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_USERNAME_ACT}, this.serviceDialPlanOperationCompleted, userState);
        }
        
        private void OnserviceDialPlanOperationCompleted(object arg) {
            if ((this.serviceDialPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceDialPlanCompleted(this, new serviceDialPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceDialPlanUpdate", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceDialPlanUpdate(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT, string IN_NATIONAL_EXIT_CODE, string IN_INTERNATIONAL_EXIT_CODE, string IN_COUNTRY_CODE, string IN_CITY_CODE, string IN_DIALPLAN_ACTIVE) {
            object[] results = this.Invoke("serviceDialPlanUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_USERNAME_ACT,
                        IN_NATIONAL_EXIT_CODE,
                        IN_INTERNATIONAL_EXIT_CODE,
                        IN_COUNTRY_CODE,
                        IN_CITY_CODE,
                        IN_DIALPLAN_ACTIVE});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceDialPlanUpdateAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT, string IN_NATIONAL_EXIT_CODE, string IN_INTERNATIONAL_EXIT_CODE, string IN_COUNTRY_CODE, string IN_CITY_CODE, string IN_DIALPLAN_ACTIVE) {
            this.serviceDialPlanUpdateAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_USERNAME_ACT, IN_NATIONAL_EXIT_CODE, IN_INTERNATIONAL_EXIT_CODE, IN_COUNTRY_CODE, IN_CITY_CODE, IN_DIALPLAN_ACTIVE, null);
        }
        
        /// <remarks/>
        public void serviceDialPlanUpdateAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT, string IN_NATIONAL_EXIT_CODE, string IN_INTERNATIONAL_EXIT_CODE, string IN_COUNTRY_CODE, string IN_CITY_CODE, string IN_DIALPLAN_ACTIVE, object userState) {
            if ((this.serviceDialPlanUpdateOperationCompleted == null)) {
                this.serviceDialPlanUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceDialPlanUpdateOperationCompleted);
            }
            this.InvokeAsync("serviceDialPlanUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_USERNAME_ACT,
                        IN_NATIONAL_EXIT_CODE,
                        IN_INTERNATIONAL_EXIT_CODE,
                        IN_COUNTRY_CODE,
                        IN_CITY_CODE,
                        IN_DIALPLAN_ACTIVE}, this.serviceDialPlanUpdateOperationCompleted, userState);
        }
        
        private void OnserviceDialPlanUpdateOperationCompleted(object arg) {
            if ((this.serviceDialPlanUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceDialPlanUpdateCompleted(this, new serviceDialPlanUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceLocalNumbersAreas", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceLocalNumbersAreas(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            object[] results = this.Invoke("serviceLocalNumbersAreas", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceLocalNumbersAreasAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            this.serviceLocalNumbersAreasAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, null);
        }
        
        /// <remarks/>
        public void serviceLocalNumbersAreasAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, object userState) {
            if ((this.serviceLocalNumbersAreasOperationCompleted == null)) {
                this.serviceLocalNumbersAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceLocalNumbersAreasOperationCompleted);
            }
            this.InvokeAsync("serviceLocalNumbersAreas", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD}, this.serviceLocalNumbersAreasOperationCompleted, userState);
        }
        
        private void OnserviceLocalNumbersAreasOperationCompleted(object arg) {
            if ((this.serviceLocalNumbersAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceLocalNumbersAreasCompleted(this, new serviceLocalNumbersAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceLocalNumbers", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceLocalNumbers(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            object[] results = this.Invoke("serviceLocalNumbers", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceLocalNumbersAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            this.serviceLocalNumbersAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, null);
        }
        
        /// <remarks/>
        public void serviceLocalNumbersAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, object userState) {
            if ((this.serviceLocalNumbersOperationCompleted == null)) {
                this.serviceLocalNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceLocalNumbersOperationCompleted);
            }
            this.InvokeAsync("serviceLocalNumbers", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD}, this.serviceLocalNumbersOperationCompleted, userState);
        }
        
        private void OnserviceLocalNumbersOperationCompleted(object arg) {
            if ((this.serviceLocalNumbersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceLocalNumbersCompleted(this, new serviceLocalNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceLocalNumberPhoneAdd", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceLocalNumberPhoneAdd(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_NIKOTALK_PREFIX, string IN_USERNAME_NEW) {
            object[] results = this.Invoke("serviceLocalNumberPhoneAdd", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_NIKOTALK_PREFIX,
                        IN_USERNAME_NEW});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceLocalNumberPhoneAddAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_NIKOTALK_PREFIX, string IN_USERNAME_NEW) {
            this.serviceLocalNumberPhoneAddAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_NIKOTALK_PREFIX, IN_USERNAME_NEW, null);
        }
        
        /// <remarks/>
        public void serviceLocalNumberPhoneAddAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_NIKOTALK_PREFIX, string IN_USERNAME_NEW, object userState) {
            if ((this.serviceLocalNumberPhoneAddOperationCompleted == null)) {
                this.serviceLocalNumberPhoneAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceLocalNumberPhoneAddOperationCompleted);
            }
            this.InvokeAsync("serviceLocalNumberPhoneAdd", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_NIKOTALK_PREFIX,
                        IN_USERNAME_NEW}, this.serviceLocalNumberPhoneAddOperationCompleted, userState);
        }
        
        private void OnserviceLocalNumberPhoneAddOperationCompleted(object arg) {
            if ((this.serviceLocalNumberPhoneAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceLocalNumberPhoneAddCompleted(this, new serviceLocalNumberPhoneAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceLocalNumberFaxAdd", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceLocalNumberFaxAdd(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_NIKOFAX_PREFIX, string IN_EMAIL) {
            object[] results = this.Invoke("serviceLocalNumberFaxAdd", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_NIKOFAX_PREFIX,
                        IN_EMAIL});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceLocalNumberFaxAddAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_NIKOFAX_PREFIX, string IN_EMAIL) {
            this.serviceLocalNumberFaxAddAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_NIKOFAX_PREFIX, IN_EMAIL, null);
        }
        
        /// <remarks/>
        public void serviceLocalNumberFaxAddAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_NIKOFAX_PREFIX, string IN_EMAIL, object userState) {
            if ((this.serviceLocalNumberFaxAddOperationCompleted == null)) {
                this.serviceLocalNumberFaxAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceLocalNumberFaxAddOperationCompleted);
            }
            this.InvokeAsync("serviceLocalNumberFaxAdd", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_NIKOFAX_PREFIX,
                        IN_EMAIL}, this.serviceLocalNumberFaxAddOperationCompleted, userState);
        }
        
        private void OnserviceLocalNumberFaxAddOperationCompleted(object arg) {
            if ((this.serviceLocalNumberFaxAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceLocalNumberFaxAddCompleted(this, new serviceLocalNumberFaxAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceLocalNumberPhoneUpdate", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceLocalNumberPhoneUpdate(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_NIKOTALK_NUMBER, string IN_USERNAME_NEW) {
            object[] results = this.Invoke("serviceLocalNumberPhoneUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_NIKOTALK_NUMBER,
                        IN_USERNAME_NEW});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceLocalNumberPhoneUpdateAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_NIKOTALK_NUMBER, string IN_USERNAME_NEW) {
            this.serviceLocalNumberPhoneUpdateAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_NIKOTALK_NUMBER, IN_USERNAME_NEW, null);
        }
        
        /// <remarks/>
        public void serviceLocalNumberPhoneUpdateAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_NIKOTALK_NUMBER, string IN_USERNAME_NEW, object userState) {
            if ((this.serviceLocalNumberPhoneUpdateOperationCompleted == null)) {
                this.serviceLocalNumberPhoneUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceLocalNumberPhoneUpdateOperationCompleted);
            }
            this.InvokeAsync("serviceLocalNumberPhoneUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_NIKOTALK_NUMBER,
                        IN_USERNAME_NEW}, this.serviceLocalNumberPhoneUpdateOperationCompleted, userState);
        }
        
        private void OnserviceLocalNumberPhoneUpdateOperationCompleted(object arg) {
            if ((this.serviceLocalNumberPhoneUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceLocalNumberPhoneUpdateCompleted(this, new serviceLocalNumberPhoneUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceLocalNumberFaxUpdate", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceLocalNumberFaxUpdate(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_NIKOFAX_NUMBER, string IN_EMAIL) {
            object[] results = this.Invoke("serviceLocalNumberFaxUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_NIKOFAX_NUMBER,
                        IN_EMAIL});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceLocalNumberFaxUpdateAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_NIKOFAX_NUMBER, string IN_EMAIL) {
            this.serviceLocalNumberFaxUpdateAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_NIKOFAX_NUMBER, IN_EMAIL, null);
        }
        
        /// <remarks/>
        public void serviceLocalNumberFaxUpdateAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_NIKOFAX_NUMBER, string IN_EMAIL, object userState) {
            if ((this.serviceLocalNumberFaxUpdateOperationCompleted == null)) {
                this.serviceLocalNumberFaxUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceLocalNumberFaxUpdateOperationCompleted);
            }
            this.InvokeAsync("serviceLocalNumberFaxUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_NIKOFAX_NUMBER,
                        IN_EMAIL}, this.serviceLocalNumberFaxUpdateOperationCompleted, userState);
        }
        
        private void OnserviceLocalNumberFaxUpdateOperationCompleted(object arg) {
            if ((this.serviceLocalNumberFaxUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceLocalNumberFaxUpdateCompleted(this, new serviceLocalNumberFaxUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceLocalNumberRemove", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceLocalNumberRemove(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_PERIODICAL_PAYMENT) {
            object[] results = this.Invoke("serviceLocalNumberRemove", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_PERIODICAL_PAYMENT});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceLocalNumberRemoveAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_PERIODICAL_PAYMENT) {
            this.serviceLocalNumberRemoveAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_PERIODICAL_PAYMENT, null);
        }
        
        /// <remarks/>
        public void serviceLocalNumberRemoveAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_PERIODICAL_PAYMENT, object userState) {
            if ((this.serviceLocalNumberRemoveOperationCompleted == null)) {
                this.serviceLocalNumberRemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceLocalNumberRemoveOperationCompleted);
            }
            this.InvokeAsync("serviceLocalNumberRemove", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_PERIODICAL_PAYMENT}, this.serviceLocalNumberRemoveOperationCompleted, userState);
        }
        
        private void OnserviceLocalNumberRemoveOperationCompleted(object arg) {
            if ((this.serviceLocalNumberRemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceLocalNumberRemoveCompleted(this, new serviceLocalNumberRemoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceMailboxes", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceMailboxes(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT) {
            object[] results = this.Invoke("serviceMailboxes", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_USERNAME_ACT});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceMailboxesAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT) {
            this.serviceMailboxesAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_USERNAME_ACT, null);
        }
        
        /// <remarks/>
        public void serviceMailboxesAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT, object userState) {
            if ((this.serviceMailboxesOperationCompleted == null)) {
                this.serviceMailboxesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceMailboxesOperationCompleted);
            }
            this.InvokeAsync("serviceMailboxes", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_USERNAME_ACT}, this.serviceMailboxesOperationCompleted, userState);
        }
        
        private void OnserviceMailboxesOperationCompleted(object arg) {
            if ((this.serviceMailboxesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceMailboxesCompleted(this, new serviceMailboxesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceMailboxesUpdate", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceMailboxesUpdate(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT, string IN_FORWARD_BUSY, string IN_FORWARD_UNAVAILABLE, string IN_FORWARD_UNAVAILABLE_TTL, string IN_EMAIL_ACT, string IN_PIN) {
            object[] results = this.Invoke("serviceMailboxesUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_USERNAME_ACT,
                        IN_FORWARD_BUSY,
                        IN_FORWARD_UNAVAILABLE,
                        IN_FORWARD_UNAVAILABLE_TTL,
                        IN_EMAIL_ACT,
                        IN_PIN});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceMailboxesUpdateAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT, string IN_FORWARD_BUSY, string IN_FORWARD_UNAVAILABLE, string IN_FORWARD_UNAVAILABLE_TTL, string IN_EMAIL_ACT, string IN_PIN) {
            this.serviceMailboxesUpdateAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_USERNAME_ACT, IN_FORWARD_BUSY, IN_FORWARD_UNAVAILABLE, IN_FORWARD_UNAVAILABLE_TTL, IN_EMAIL_ACT, IN_PIN, null);
        }
        
        /// <remarks/>
        public void serviceMailboxesUpdateAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT, string IN_FORWARD_BUSY, string IN_FORWARD_UNAVAILABLE, string IN_FORWARD_UNAVAILABLE_TTL, string IN_EMAIL_ACT, string IN_PIN, object userState) {
            if ((this.serviceMailboxesUpdateOperationCompleted == null)) {
                this.serviceMailboxesUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceMailboxesUpdateOperationCompleted);
            }
            this.InvokeAsync("serviceMailboxesUpdate", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_USERNAME_ACT,
                        IN_FORWARD_BUSY,
                        IN_FORWARD_UNAVAILABLE,
                        IN_FORWARD_UNAVAILABLE_TTL,
                        IN_EMAIL_ACT,
                        IN_PIN}, this.serviceMailboxesUpdateOperationCompleted, userState);
        }
        
        private void OnserviceMailboxesUpdateOperationCompleted(object arg) {
            if ((this.serviceMailboxesUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceMailboxesUpdateCompleted(this, new serviceMailboxesUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/service99Numbers", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet service99Numbers(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            object[] results = this.Invoke("service99Numbers", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void service99NumbersAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            this.service99NumbersAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, null);
        }
        
        /// <remarks/>
        public void service99NumbersAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, object userState) {
            if ((this.service99NumbersOperationCompleted == null)) {
                this.service99NumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.Onservice99NumbersOperationCompleted);
            }
            this.InvokeAsync("service99Numbers", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD}, this.service99NumbersOperationCompleted, userState);
        }
        
        private void Onservice99NumbersOperationCompleted(object arg) {
            if ((this.service99NumbersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.service99NumbersCompleted(this, new service99NumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/service99NumberAdd", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet service99NumberAdd(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_VANITY_NUMBER, string IN_USERNAME_ACT) {
            object[] results = this.Invoke("service99NumberAdd", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_VANITY_NUMBER,
                        IN_USERNAME_ACT});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void service99NumberAddAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_VANITY_NUMBER, string IN_USERNAME_ACT) {
            this.service99NumberAddAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_VANITY_NUMBER, IN_USERNAME_ACT, null);
        }
        
        /// <remarks/>
        public void service99NumberAddAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_VANITY_NUMBER, string IN_USERNAME_ACT, object userState) {
            if ((this.service99NumberAddOperationCompleted == null)) {
                this.service99NumberAddOperationCompleted = new System.Threading.SendOrPostCallback(this.Onservice99NumberAddOperationCompleted);
            }
            this.InvokeAsync("service99NumberAdd", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_VANITY_NUMBER,
                        IN_USERNAME_ACT}, this.service99NumberAddOperationCompleted, userState);
        }
        
        private void Onservice99NumberAddOperationCompleted(object arg) {
            if ((this.service99NumberAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.service99NumberAddCompleted(this, new service99NumberAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/service99NumberRemove", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet service99NumberRemove(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_VANITY_NUMBER) {
            object[] results = this.Invoke("service99NumberRemove", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_VANITY_NUMBER});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void service99NumberRemoveAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_VANITY_NUMBER) {
            this.service99NumberRemoveAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_VANITY_NUMBER, null);
        }
        
        /// <remarks/>
        public void service99NumberRemoveAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_VANITY_NUMBER, object userState) {
            if ((this.service99NumberRemoveOperationCompleted == null)) {
                this.service99NumberRemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.Onservice99NumberRemoveOperationCompleted);
            }
            this.InvokeAsync("service99NumberRemove", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_VANITY_NUMBER}, this.service99NumberRemoveOperationCompleted, userState);
        }
        
        private void Onservice99NumberRemoveOperationCompleted(object arg) {
            if ((this.service99NumberRemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.service99NumberRemoveCompleted(this, new service99NumberRemoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceSpeedDials", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceSpeedDials(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT) {
            object[] results = this.Invoke("serviceSpeedDials", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_USERNAME_ACT});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceSpeedDialsAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT) {
            this.serviceSpeedDialsAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_USERNAME_ACT, null);
        }
        
        /// <remarks/>
        public void serviceSpeedDialsAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT, object userState) {
            if ((this.serviceSpeedDialsOperationCompleted == null)) {
                this.serviceSpeedDialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceSpeedDialsOperationCompleted);
            }
            this.InvokeAsync("serviceSpeedDials", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_USERNAME_ACT}, this.serviceSpeedDialsOperationCompleted, userState);
        }
        
        private void OnserviceSpeedDialsOperationCompleted(object arg) {
            if ((this.serviceSpeedDialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceSpeedDialsCompleted(this, new serviceSpeedDialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceSpeedDialsAdd", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceSpeedDialsAdd(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_SPEEDDIAL_NUMBER, string IN_USERNAME_ACT, string IN_TRANSLATION, string IN_DESCRIPTION) {
            object[] results = this.Invoke("serviceSpeedDialsAdd", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_SPEEDDIAL_NUMBER,
                        IN_USERNAME_ACT,
                        IN_TRANSLATION,
                        IN_DESCRIPTION});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceSpeedDialsAddAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_SPEEDDIAL_NUMBER, string IN_USERNAME_ACT, string IN_TRANSLATION, string IN_DESCRIPTION) {
            this.serviceSpeedDialsAddAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_SPEEDDIAL_NUMBER, IN_USERNAME_ACT, IN_TRANSLATION, IN_DESCRIPTION, null);
        }
        
        /// <remarks/>
        public void serviceSpeedDialsAddAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_SPEEDDIAL_NUMBER, string IN_USERNAME_ACT, string IN_TRANSLATION, string IN_DESCRIPTION, object userState) {
            if ((this.serviceSpeedDialsAddOperationCompleted == null)) {
                this.serviceSpeedDialsAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceSpeedDialsAddOperationCompleted);
            }
            this.InvokeAsync("serviceSpeedDialsAdd", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_SPEEDDIAL_NUMBER,
                        IN_USERNAME_ACT,
                        IN_TRANSLATION,
                        IN_DESCRIPTION}, this.serviceSpeedDialsAddOperationCompleted, userState);
        }
        
        private void OnserviceSpeedDialsAddOperationCompleted(object arg) {
            if ((this.serviceSpeedDialsAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceSpeedDialsAddCompleted(this, new serviceSpeedDialsAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceSpeedDialRemove", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceSpeedDialRemove(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_SPEEDDIAL_NUMBER, string IN_USERNAME_ACT) {
            object[] results = this.Invoke("serviceSpeedDialRemove", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_SPEEDDIAL_NUMBER,
                        IN_USERNAME_ACT});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceSpeedDialRemoveAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_SPEEDDIAL_NUMBER, string IN_USERNAME_ACT) {
            this.serviceSpeedDialRemoveAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_SPEEDDIAL_NUMBER, IN_USERNAME_ACT, null);
        }
        
        /// <remarks/>
        public void serviceSpeedDialRemoveAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_SPEEDDIAL_NUMBER, string IN_USERNAME_ACT, object userState) {
            if ((this.serviceSpeedDialRemoveOperationCompleted == null)) {
                this.serviceSpeedDialRemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceSpeedDialRemoveOperationCompleted);
            }
            this.InvokeAsync("serviceSpeedDialRemove", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_SPEEDDIAL_NUMBER,
                        IN_USERNAME_ACT}, this.serviceSpeedDialRemoveOperationCompleted, userState);
        }
        
        private void OnserviceSpeedDialRemoveOperationCompleted(object arg) {
            if ((this.serviceSpeedDialRemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceSpeedDialRemoveCompleted(this, new serviceSpeedDialRemoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceCallNow", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceCallNow(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_CALL_FROM, string IN_CALL_TO) {
            object[] results = this.Invoke("serviceCallNow", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_CALL_FROM,
                        IN_CALL_TO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceCallNowAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_CALL_FROM, string IN_CALL_TO) {
            this.serviceCallNowAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_CALL_FROM, IN_CALL_TO, null);
        }
        
        /// <remarks/>
        public void serviceCallNowAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_CALL_FROM, string IN_CALL_TO, object userState) {
            if ((this.serviceCallNowOperationCompleted == null)) {
                this.serviceCallNowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceCallNowOperationCompleted);
            }
            this.InvokeAsync("serviceCallNow", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_CALL_FROM,
                        IN_CALL_TO}, this.serviceCallNowOperationCompleted, userState);
        }
        
        private void OnserviceCallNowOperationCompleted(object arg) {
            if ((this.serviceCallNowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceCallNowCompleted(this, new serviceCallNowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceCallBacks", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceCallBacks(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_CALL_BACK_ACT) {
            object[] results = this.Invoke("serviceCallBacks", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_CALL_BACK_ACT});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceCallBacksAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_CALL_BACK_ACT) {
            this.serviceCallBacksAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_CALL_BACK_ACT, null);
        }
        
        /// <remarks/>
        public void serviceCallBacksAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_CALL_BACK_ACT, object userState) {
            if ((this.serviceCallBacksOperationCompleted == null)) {
                this.serviceCallBacksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceCallBacksOperationCompleted);
            }
            this.InvokeAsync("serviceCallBacks", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_CALL_BACK_ACT}, this.serviceCallBacksOperationCompleted, userState);
        }
        
        private void OnserviceCallBacksOperationCompleted(object arg) {
            if ((this.serviceCallBacksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceCallBacksCompleted(this, new serviceCallBacksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceCallBackAdd", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceCallBackAdd(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_CALL_BACK, string IN_USERNAME_ACT, string IN_CALL_BACK_ALT) {
            object[] results = this.Invoke("serviceCallBackAdd", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_CALL_BACK,
                        IN_USERNAME_ACT,
                        IN_CALL_BACK_ALT});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceCallBackAddAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_CALL_BACK, string IN_USERNAME_ACT, string IN_CALL_BACK_ALT) {
            this.serviceCallBackAddAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_CALL_BACK, IN_USERNAME_ACT, IN_CALL_BACK_ALT, null);
        }
        
        /// <remarks/>
        public void serviceCallBackAddAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_CALL_BACK, string IN_USERNAME_ACT, string IN_CALL_BACK_ALT, object userState) {
            if ((this.serviceCallBackAddOperationCompleted == null)) {
                this.serviceCallBackAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceCallBackAddOperationCompleted);
            }
            this.InvokeAsync("serviceCallBackAdd", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_CALL_BACK,
                        IN_USERNAME_ACT,
                        IN_CALL_BACK_ALT}, this.serviceCallBackAddOperationCompleted, userState);
        }
        
        private void OnserviceCallBackAddOperationCompleted(object arg) {
            if ((this.serviceCallBackAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceCallBackAddCompleted(this, new serviceCallBackAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/serviceCallBackRemove", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet serviceCallBackRemove(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_CALL_BACK_ACT) {
            object[] results = this.Invoke("serviceCallBackRemove", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_CALL_BACK_ACT});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void serviceCallBackRemoveAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_CALL_BACK_ACT) {
            this.serviceCallBackRemoveAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_CALL_BACK_ACT, null);
        }
        
        /// <remarks/>
        public void serviceCallBackRemoveAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_CALL_BACK_ACT, object userState) {
            if ((this.serviceCallBackRemoveOperationCompleted == null)) {
                this.serviceCallBackRemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserviceCallBackRemoveOperationCompleted);
            }
            this.InvokeAsync("serviceCallBackRemove", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_CALL_BACK_ACT}, this.serviceCallBackRemoveOperationCompleted, userState);
        }
        
        private void OnserviceCallBackRemoveOperationCompleted(object arg) {
            if ((this.serviceCallBackRemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serviceCallBackRemoveCompleted(this, new serviceCallBackRemoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/billingCDR", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet billingCDR(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT, string IN_DATE_FROM, string IN_DATE_TO) {
            object[] results = this.Invoke("billingCDR", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_USERNAME_ACT,
                        IN_DATE_FROM,
                        IN_DATE_TO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void billingCDRAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT, string IN_DATE_FROM, string IN_DATE_TO) {
            this.billingCDRAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, IN_USERNAME_ACT, IN_DATE_FROM, IN_DATE_TO, null);
        }
        
        /// <remarks/>
        public void billingCDRAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, string IN_USERNAME_ACT, string IN_DATE_FROM, string IN_DATE_TO, object userState) {
            if ((this.billingCDROperationCompleted == null)) {
                this.billingCDROperationCompleted = new System.Threading.SendOrPostCallback(this.OnbillingCDROperationCompleted);
            }
            this.InvokeAsync("billingCDR", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD,
                        IN_USERNAME_ACT,
                        IN_DATE_FROM,
                        IN_DATE_TO}, this.billingCDROperationCompleted, userState);
        }
        
        private void OnbillingCDROperationCompleted(object arg) {
            if ((this.billingCDRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.billingCDRCompleted(this, new billingCDRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/billingOverview", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet billingOverview(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            object[] results = this.Invoke("billingOverview", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void billingOverviewAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD) {
            this.billingOverviewAsync(IN_SECRET, IN_CPID, IN_CUSTOMERID, IN_USERNAME, IN_PASSWORD, null);
        }
        
        /// <remarks/>
        public void billingOverviewAsync(string IN_SECRET, string IN_CPID, string IN_CUSTOMERID, string IN_USERNAME, string IN_PASSWORD, object userState) {
            if ((this.billingOverviewOperationCompleted == null)) {
                this.billingOverviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbillingOverviewOperationCompleted);
            }
            this.InvokeAsync("billingOverview", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_CUSTOMERID,
                        IN_USERNAME,
                        IN_PASSWORD}, this.billingOverviewOperationCompleted, userState);
        }
        
        private void OnbillingOverviewOperationCompleted(object arg) {
            if ((this.billingOverviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.billingOverviewCompleted(this, new billingOverviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rsi.remwave.com/utilsRates", RequestNamespace="http://rsi.remwave.com/", ResponseNamespace="http://rsi.remwave.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet utilsRates(string IN_SECRET, string IN_CPID, string IN_TARIFFID, string IN_SEARCH) {
            object[] results = this.Invoke("utilsRates", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_TARIFFID,
                        IN_SEARCH});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void utilsRatesAsync(string IN_SECRET, string IN_CPID, string IN_TARIFFID, string IN_SEARCH) {
            this.utilsRatesAsync(IN_SECRET, IN_CPID, IN_TARIFFID, IN_SEARCH, null);
        }
        
        /// <remarks/>
        public void utilsRatesAsync(string IN_SECRET, string IN_CPID, string IN_TARIFFID, string IN_SEARCH, object userState) {
            if ((this.utilsRatesOperationCompleted == null)) {
                this.utilsRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnutilsRatesOperationCompleted);
            }
            this.InvokeAsync("utilsRates", new object[] {
                        IN_SECRET,
                        IN_CPID,
                        IN_TARIFFID,
                        IN_SEARCH}, this.utilsRatesOperationCompleted, userState);
        }
        
        private void OnutilsRatesOperationCompleted(object arg) {
            if ((this.utilsRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.utilsRatesCompleted(this, new utilsRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void clientPrepaidAmountCompletedEventHandler(object sender, clientPrepaidAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class clientPrepaidAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal clientPrepaidAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void clientCallNowCompletedEventHandler(object sender, clientCallNowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class clientCallNowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal clientCallNowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void accountCreateCompletedEventHandler(object sender, accountCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void accountUpdateCompletedEventHandler(object sender, accountUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void accountCustomerCompletedEventHandler(object sender, accountCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void accountRemoveCompletedEventHandler(object sender, accountRemoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountRemoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountRemoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void accountPreferedLanguageUpdateCompletedEventHandler(object sender, accountPreferedLanguageUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountPreferedLanguageUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountPreferedLanguageUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void accountTimeZoneUpdateCompletedEventHandler(object sender, accountTimeZoneUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountTimeZoneUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountTimeZoneUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void accountAuthenticationCompletedEventHandler(object sender, accountAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void accountUsersCompletedEventHandler(object sender, accountUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void accountUserAddCompletedEventHandler(object sender, accountUserAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountUserAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountUserAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void accountUserUpdateCompletedEventHandler(object sender, accountUserUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountUserUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountUserUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void accountUserRemoveCompletedEventHandler(object sender, accountUserRemoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountUserRemoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountUserRemoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void accountUserOnlineStatusCompletedEventHandler(object sender, accountUserOnlineStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountUserOnlineStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountUserOnlineStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void accountPrepaidCompletedEventHandler(object sender, accountPrepaidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountPrepaidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountPrepaidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void accountPrepaidAlertUpdateCompletedEventHandler(object sender, accountPrepaidAlertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountPrepaidAlertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountPrepaidAlertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void accountPrepaidMasterAddCompletedEventHandler(object sender, accountPrepaidMasterAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountPrepaidMasterAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountPrepaidMasterAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void accountMinutesCompletedEventHandler(object sender, accountMinutesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountMinutesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountMinutesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceDialPlanCompletedEventHandler(object sender, serviceDialPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceDialPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceDialPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceDialPlanUpdateCompletedEventHandler(object sender, serviceDialPlanUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceDialPlanUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceDialPlanUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceLocalNumbersAreasCompletedEventHandler(object sender, serviceLocalNumbersAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceLocalNumbersAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceLocalNumbersAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceLocalNumbersCompletedEventHandler(object sender, serviceLocalNumbersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceLocalNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceLocalNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceLocalNumberPhoneAddCompletedEventHandler(object sender, serviceLocalNumberPhoneAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceLocalNumberPhoneAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceLocalNumberPhoneAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceLocalNumberFaxAddCompletedEventHandler(object sender, serviceLocalNumberFaxAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceLocalNumberFaxAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceLocalNumberFaxAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceLocalNumberPhoneUpdateCompletedEventHandler(object sender, serviceLocalNumberPhoneUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceLocalNumberPhoneUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceLocalNumberPhoneUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceLocalNumberFaxUpdateCompletedEventHandler(object sender, serviceLocalNumberFaxUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceLocalNumberFaxUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceLocalNumberFaxUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceLocalNumberRemoveCompletedEventHandler(object sender, serviceLocalNumberRemoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceLocalNumberRemoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceLocalNumberRemoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceMailboxesCompletedEventHandler(object sender, serviceMailboxesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceMailboxesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceMailboxesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceMailboxesUpdateCompletedEventHandler(object sender, serviceMailboxesUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceMailboxesUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceMailboxesUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void service99NumbersCompletedEventHandler(object sender, service99NumbersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class service99NumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal service99NumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void service99NumberAddCompletedEventHandler(object sender, service99NumberAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class service99NumberAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal service99NumberAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void service99NumberRemoveCompletedEventHandler(object sender, service99NumberRemoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class service99NumberRemoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal service99NumberRemoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceSpeedDialsCompletedEventHandler(object sender, serviceSpeedDialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceSpeedDialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceSpeedDialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceSpeedDialsAddCompletedEventHandler(object sender, serviceSpeedDialsAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceSpeedDialsAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceSpeedDialsAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceSpeedDialRemoveCompletedEventHandler(object sender, serviceSpeedDialRemoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceSpeedDialRemoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceSpeedDialRemoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceCallNowCompletedEventHandler(object sender, serviceCallNowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceCallNowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceCallNowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceCallBacksCompletedEventHandler(object sender, serviceCallBacksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceCallBacksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceCallBacksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceCallBackAddCompletedEventHandler(object sender, serviceCallBackAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceCallBackAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceCallBackAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void serviceCallBackRemoveCompletedEventHandler(object sender, serviceCallBackRemoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serviceCallBackRemoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serviceCallBackRemoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void billingCDRCompletedEventHandler(object sender, billingCDRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class billingCDRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal billingCDRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void billingOverviewCompletedEventHandler(object sender, billingOverviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class billingOverviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal billingOverviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void utilsRatesCompletedEventHandler(object sender, utilsRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class utilsRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal utilsRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591